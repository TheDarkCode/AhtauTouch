{
  "name": "AhtauTouch",
  "tagline": "Peek and Pop extensions compatible with all iOS devices.",
  "body": "# AhtauTouch\r\nPeek and Pop extensions compatible with all iOS devices.\r\n\r\n## Usage\r\n\r\nImport AhtauTouch at the top of the file containing the class in which you plan on supporting previewing (Peek) and commit (Pop).\r\n\r\n```swift\r\nimport AhtauTouch\r\n```\r\n\r\nFirst create an AhtauTouch object with a reference to the containing view controller amd source view for gesture recognition. Then add methods to conform to AhtauTouchPreviewingDelegate.\r\n\r\n```swift\r\n// final prefix for optimization if your View Controller is not being subclassed.\r\nfinal class ViewController: UIViewController, AhtauTouchPreviewingDelegate {\r\n    \r\n    // AhtauTouch Object\r\n    var ahtauTouch: AhtauTouch?\r\n        \r\n    override func viewDidLoad() {\r\n        \r\n        // Initialize with Reference to Containing View Controller\r\n        ahtauTouch = AhtauTouch(viewController: self)\r\n\r\n        // Register View to Target for Observing Gestures (self.view is used to ensure proper rendering).\r\n        ahtauTouch?.registerForPreviewingWithDelegate(self, sourceView: self.view)\r\n    }\r\n\r\n}\r\n```\r\n\r\nAs with Apple's own 3D Touch preview APIs, AhtauTouchPreviewingDelegate requires implementing two methods in the conforming class. \r\n\r\nThe first function defines the View Controller initialized as the previewing context: \r\n```swift\r\n    func previewingContext(previewingContext: PreviewingContext, viewControllerForLocation location: CGPoint) -> UIViewController?\r\n```\r\n\r\nThe second function then defines how to handle the actual use of that previewing context for the \"Pop\" action: \r\n```swift\r\n    func previewingContext(previewingContext: PreviewingContext, commitViewController viewControllerToCommit: UIViewController)\r\n```\r\n\r\n##CocoaPods\r\n\r\n[CocoaPods](http://cocoapods.org) is a dependency manager for Cocoa projects. You can install it with the following command:\r\n\r\n```bash\r\n$ gem install cocoapods\r\n```\r\n\r\n> CocoaPods 0.39.0+ is required to build AhtauTouch 0.0.1+.\r\n\r\nTo integrate AhtauTouch into your Xcode project using CocoaPods, specify it in your `Podfile`:\r\n\r\n```ruby\r\nsource 'https://github.com/CocoaPods/Specs.git'\r\nplatform :ios, '8.0'\r\nuse_frameworks!\r\n\r\npod 'AhtauTouch', '~> 0.0.1'\r\n```\r\n\r\nThen, run the following command:\r\n\r\n```bash\r\n$ pod install\r\n```\r\n\r\n##Related Projects:\r\n\r\n###Example Swift Apps by Mark Hamilton, Dryverless\r\nCollection of example applications written in Swift / Objective-C for iOS 9.x (developed under 9.2.1 SDK - will be migrated to 9.3 when released)\r\n######https://github.com/TheDarkCode/Example-Swift-Apps\r\n\r\n##Support:\r\n\r\n#####Send any questions or requests to: support@dryverless.com\r\n\r\n## Contributing\r\n\r\n  - 1) Fork this repository!\r\n  - 2) Create your feature branch: ```git checkout -b Your-New-Feature```\r\n  - 3) Commit your changes: ```git commit -am 'Adding some super awesome update'```\r\n  - 4) Push to the branch: ```git push origin Your-New-Feature```\r\n  - 5) Submit a pull request!\r\n\r\n## Acknowledgements\r\n\r\nPeekPop by Roy Marmelstein\r\n[https://github.com/marmelroy/PeekPop](https://github.com/marmelroy/PeekPop)\r\n\r\n## License\r\nCopyright (c) 2016 Mark Hamilton / dryverless (http://www.dryverless.com)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}